<?xml version="1.0" encoding="windows-1252"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:oxm="http://www.springframework.org/schema/oxm"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
 
  <!-- Use @Component annotations for bean definitions -->
  <context:component-scan base-package="uk.bl.wap.crowdsourcing"/>
 
  <!-- Use @Controller annotations for MVC controller definitions -->
 <mvc:annotation-driven />

<bean id="contextApplicationContextProvider" class="uk.bl.wap.crowdsourcing.ApplicationContextProvider"></bean>  
 
  <!-- Add JPA support -->
  <bean id="emf" class=
       "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
     <property name="loadTimeWeaver">
        <bean class=
 "org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
      </property>
  </bean>
  
    <!-- Add Transaction support -->
  <bean id="myTxManager"
     class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="emf"/>
  </bean>
  
   
  <!-- Use @Transaction annotations for managing transactions -->
  <tx:annotation-driven transaction-manager="myTxManager" />
  
  <!-- View resolver -->
 <bean class=
     "org.springframework.web.servlet.view.InternalResourceViewResolver">
   <property name="prefix" value="/jsp/"/>
 </bean>

 <!--  
 <bean name="twitterStreamManager" class="org.springframework.scheduling.quartz.JobDetailBean">
  <property name="jobClass" value="uk.bl.wap.crowdsourcing.TwitterStreamManager"/>
  <property name="jobDataAsMap">
    <map>
      <entry key="runlength" value="60000"/>
    </map>
  </property>
</bean>
-->
<!--  
 <bean name="twitterStreamDaemon" class="org.springframework.scheduling.quartz.JobDetailBean">
  <property name="jobClass" value="uk.bl.wap.crowdsourcing.TwitterStreamDaemon"/>
</bean>

<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
  <property name="jobDetail" ref="twitterStreamDaemon"/>
  <property name="startDelay" value="9000000000000"/>
  <property name="repeatInterval" value="900000000000"/>
</bean>

<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    <property name="triggers">
        <list>
        	<ref bean="simpleTrigger" />
        </list>
    </property>
    <property name="applicationContextSchedulerContextKey">
    	<value>applicationContext</value>
  	</property>
</bean>
-->
</beans>