<?xml version="1.0" encoding="windows-1252"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- Use @Component annotations for bean definitions -->
	<context:component-scan base-package="uk.bl.wap.crowdsourcing" />

	<!-- Use @Controller annotations for MVC controller definitions -->
	<mvc:annotation-driven />

	<bean id="contextApplicationContextProvider" class="uk.bl.wap.crowdsourcing.ApplicationContextProvider"></bean>

	<!-- Add JPA support -->
	<bean id="emf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
	</bean>

	<!-- logger to write json tweets to a specified file -->
	<bean id="jsonLogger" class="uk.bl.wap.crowdsourcing.logger.JsonLogger"
		lazy-init="false">
		<property name="fileName" value="json" />
		<property name="filePath" value="/usr/share/tomcat6/logs/json/" />
		<property name="fileExtension" value=".log." />
	</bean>

	<bean id="tweetStreamAgentService"
		class="uk.bl.wap.crowdsourcing.agent.TweetStreamAgentServiceImpl">
		<property name="jsonLogger" ref="jsonLogger" />
		<property name="analysisTriggerValue" value="100" />
		<property name="displayLastStreamErrors" value="5" />
		<property name="webCollectionDao" ref="webCollectionDao" />
	</bean>
	
	<bean id="webCollectionDao" class="uk.bl.wap.crowdsourcing.dao.WebCollectionDao">
		<!-- defines name for the "UNKNOWN" bucket web collection -->
		<property name="unknownCollectionName" value="UNKNOWN" />
	</bean>
	
	<!-- RMI client definition for the tweetAnalyserService -->
	<bean id="tweetAnalyserService" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
		<property name="serviceUrl" value="rmi://localhost:1099/TweetAnalyserService"/>
		<property name="serviceInterface" value="uk.bl.wap.crowdsourcing.agent.TweetAnalyserService"/>
	</bean>

	<!-- Add Transaction support -->
	<bean id="myTxManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="emf" />
	</bean>

	<!-- Use @Transaction annotations for managing transactions -->
	<tx:annotation-driven transaction-manager="myTxManager" />

	<!-- View resolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/jsp/" />
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages" />
	</bean>
	
</beans>